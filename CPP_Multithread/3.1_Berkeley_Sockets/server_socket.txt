#include "socket.txt"

listen(sd, SOMAXCONN);
// sd == socket_descriptor
// By default SOMAXCONN = 128 connections

while (s1 = accept(sd, 0, 0)) {
    // Consistently, not parallel
}

first 0:
    struct sockaddr * // IP + port
second 0:
    size *
-----------------------------------------------
// Work with `s1` socket
// fd == s1
size_t read(int fd, void *buffer, size_t count);
size_t write(int fd, const void *buffer, size_t count);

SIGPIPE -> connection errors

    signal(SIGPIPE, SIG_IGN); // Ignoring. Bad case

// Better use:
size_t recv(int fd, void *buffer, size_t count, int flags);
size_t send(int fd, const void *buffer, size_t count, int flags);

flags:
    MSG_NOSIGNAL -> no signal messages
-----------------------------------------------
close(sd); -> close descriptor, but not connection

shutdown(sd, SHUT_RDWR  <-> read/write
             SHUT_RD     -> read
             SHUT_WR    <-  write
        );
